"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const router = express_1.default.Router();
const auth_1 = require("../middleware/auth");
const user_1 = require("../controllers/user");
const monoController_1 = require("../controllers/monoController");
router.post('/signup', user_1.createUser);
router.post('/login', user_1.loginUser);
router.patch('/update/:id', user_1.updateUser);
router.delete('/delete/:id', auth_1.auth, user_1.deleteUser);
router.get('/get/:id', auth_1.auth, user_1.getUser);
router.get('/getall', auth_1.auth, user_1.getAllUsers);
router.post('/createbankaccount', auth_1.auth, user_1.createBankAccount);
router.patch('/updatebankaccount/:id', auth_1.auth, user_1.updateBankAccount);
router.delete('/deletebankaccount/:id', auth_1.auth, user_1.deleteBankAccount);
router.get('/getallbankaccounts', auth_1.auth, user_1.getAllBankAccounts);
router.post('/tokensignin', user_1.tokenSignin);
router.post('/login-to-bank', user_1.monoSessionLogin);
router.get('/get-all-banks', user_1.getAllMonoBanks);
router.post('/exchangetoken', user_1.exchangeToken);
router.get('/get-account-details', auth_1.auth, user_1.getMonoAccountDetails);
router.get('/get-account-stat', auth_1.auth, user_1.getMonoAccountStat);
router.get('/get-client-identity', auth_1.auth, user_1.getClientIdentity);
router.post('/get-transaction-history', auth_1.auth, user_1.getTransactionHistory);
router.get('/get-client-investment', auth_1.auth, user_1.getClinetInvestment);
router.get('/get-client-earnings', auth_1.auth, user_1.getClientEarnings);
router.get('/get-client-credit-inflow', auth_1.auth, user_1.getClientsCreditInflow);
router.get('/get-client-debit-inflow', auth_1.auth, user_1.getClientsDebitInflow);
router.post('/directpay-login', auth_1.auth, user_1.directPayLogin);
router.post('/directpay-session', auth_1.auth, user_1.directPaySession);
router.post('/create-charge', auth_1.auth, user_1.createCharge);
router.post('/confirm-payment', auth_1.auth, user_1.confirmPaymentVerification);
router.get('/linked-bank/:userId', monoController_1.getLinkedBank);
router.post('/bank-login', monoController_1.monoSessionLoginCredential);
router.post('/direct-pay', monoController_1.monoDirectPay);
router.delete('/delete-linked-banks/:id', monoController_1.deleteLinkedBank);
router.patch('/update-linked-bank/:id', monoController_1.updateLinkedBank);
exports.default = router;
